第7章
数据持久存储与交换

要实现这种功能，有两个模块可以将对象转换为一种可以传输或存储的格式【这个过程叫做’串行化serializing‘】

完成持久存储：pickle模块、shelve模块
web领域的应用：json模块

一旦将内存中对象转换为一种可以保存的格式，
下一步就是确定如何存储这个数据。

依顺序先后写入串行化对象的方式来存储且不需要索引，
Python有一组模块可以在一个简单的数据库中存储键-值对。
DBM数据库键-值必须是“字符串string”，
而且在数据库中访问值时不会自动地重新创建对象。

shelve模块：
    如果需要索引查找时会使用某种变种DBM格式，
    要利用DBM格式，最直接的方式就是shelve，
    打开shelve文件，通过一个类字典的API来访问，
    保存到数据库的对象会自动pickle并保存，无需调用者额外工作。
    为了保证数据库的可移植性，数据可以在不同操作系统之间共享，
    就要用shelve模块中的某个类来解决数据存储时选择什么格式问题。

json模块：
    因为web处理的就是JSON格式的数据，因此使用json和anydbm来提供持久存储
    直接使用anydbm会比shelve稍多些工作量
    
sqlite3模块：
    可以采用比键-值对更复杂的组织来存储数据
    它将数据库存储在内存中或者本地文件中，
    所有访问来自同一个进程，不存在网络通信延迟
    sqlite3的紧凑性适合桌面应用或web应用
    
xml.etree.ElementTree:
    解析定义更为形式化的格式，有助于与其它编程语言应用之间交换数据    
    ElementTree还包括一个接口，可以由内存中的对象创建XML文档

csv模块：
    可以读写表格数据（采用由电子表格或数据库应用生成的格式）
    有助于批量加载数据或者将数据从一种格式转换为另一种格式
